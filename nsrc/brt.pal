	/ B RUNTIME
	*0
	0		/ INTERRUPT HANDLER
	HLT

	*20		/ RUNTIME FUNCTIONS
ENTER=	JMS I .
	XENTER

LEAVE=	JMS I .
	XLEAVE

MUL=	JMS I .
	XMUL

DIV=	JMS I .
	XDIV

MOD=	JMS I .
	XMOD

TMP1,	0		/ RUNTIME SCRATCH REGISTERS
TMP2,	0
TMP3,	0

BREG=	30		/ B RUNTIME REGISTERS

	*200		/ ENTRY POINT
ENTRY,	KCC		/ CLEAR STRAY INPUT
	JMS I XMAIN
	DCA TMP1	/ EXIT STATUS
	JMS EXIT
	TMP1
XMAIN,	MAIN

			/ RUNTIME SUPPORT

XENTER,	0		/ FUNCTION PROLOGUE
	STA		/ LOAD -1
	TAD I XENTER	/ POINTER TO BEFORE FRAME AREA
	DCA 0010	/ DEPOSIT TO INDEX REGISTER
	TAD I 0010	/ CMPL. NUMBER OF REGISTERS TO SAVE
	DCA TMP1	/ REMEMBER AS LOOP INDEX
	TAD XBREG	/ BEFORE FIRST B REGISTER
	DCA 0011	/ DEPOSIT TO INDEX REGISTER
SAVBEG,	ISZ TMP1	/ SAVE REGISTERS
	 JMP SAVEND	/ UNTIL WE ARE DONE
	TAD I 0011	/ LOAD REGISTER
	DCA I 0010	/ SAVE REGISTER
	JMP SAVBEG	/ CONTINUE
SAVEND,	TAD I 0010	/ CMPL. NUMBER OF ARGUMENTS
	DCA TMP1	/ SET UP LOOP INDEX
	STA CLL RAL	/ LOAD -2
	TAD XENTER	/ POINTER TO CALLER'S RETURN ADDRESS
	DCA TMP2	/ REMEMBER
	STA		/ LOAD -1
	TAD I TMP2	/ BEFORE CALLERS RETURN ADDRESS
	DCA 0011	/ DEPOSIT TO INDEX REGISTER
ARGBEG,	ISZ TMP1	/ LOAD ARGUMENTS
	 JMP ARGEND	/ UNTIL WE ARE DONE
	TAD I 0011	/ POINTER TO ARGUMENT
	DCA TMP3	/ REMEMBER
	TAD I TMP3	/ ARGUMENT
	DCA I 0010	/ DEPOSIT TO ARGUMENT AREA
	JMP ARGBEG	/ CONTINUE
ARGEND,	TAD 0011	/ CALLER'S CORRECTED RETURN ADDRESS
	DCA I TMP2	/ DEPOSIT IT
	TAD I 0010	/ CMPL. NUMBER OF TEMPLATE REGISTERS
	DCA TMP1	/ SET UP LOOP INDEX
	TAD XBREG	/ BEFORE FIRST B REGISTER
	DCA 0011	/ DEPOSIT TO INDEX REGISTER
TMPBEG,	ISZ TMP1	/ LOAD TEMPLATE
	 JMP TMPEND	/ UNTIL WE ARE DONE
	TAD I 0010	/ LOAD TEMPLATE
	DCA I 0011	/ STORE TO REGISTER
	JMP TMPBEG	/ CONTINUE
TMPEND,	ISZ XENTER	/ SKIP OVER ARGUMENT
	JMP I XENTER	/ RETURN

XLEAVE,	0		/ FUNCTION EPILOGUE
	DCA TMP1	/ REMEMBER RETURN VALUE
	CLA STL RTL	/ LOAD 2
	TAD I XLEAVE	/ POINTER TO POINTER TO FRAME AREA
	DCA TMP2	/ REMEMBER
	STA		/ LOAD -1
	TAD I TMP2	/ POINTER BEFORE TO FRAME AREA
	DCA 0010	/ SET UP INDEX REGISTER
	TAD I 0010	/ CMPL. NUMBER OF REGISTERS TO RESTORE
	DCA TMP3	/ SET UP LOOP INDEX
	TAD XBREG	/ BEFORE FIRST B REGISTER
	DCA 0011	/ SET UP INDEX REGISTER
RSTBEG,	ISZ TMP3	/ RESTORE REGISTERS
	 JMP RSTEND	/ UNTIL WE ARE DONE
	TAD I 0010	/ LOAD REGISTER
	DCA I 0011	/ RESTORE REGISTER
	JMP RSTBEG	/ CONTINUE
RSTEND,	TAD I XLEAVE	/ POINTER TO RETURN ADDRESS
	DCA TMP2	/ REMEMBER
	TAD TMP1	/ RETURN ADDRESS
	JMP I TMP2	/ RETURN FROM CALLER

XMUL,
XDIV,
XMOD,	0
	HLT		/ NOT IMPLEMENTED

			/ STANDARD LIBRARY

EXIT,	0
	CLA
	TAD I EXIT	/ LOAD EXIT STATUS FOR DISPLAY
	HLT		/ HALT
	JMP ENTRY	/ RESTART WHEN REQUESTED BY OPERATOR

GETCHA,	0		/ GET CHARACTER
	KSF		/ WAIT FOR INPUT
	 JMP .-1
	KRB		/ RECEIVE CHARACTER
	DCA TMP1	/ DEPOSIT A COPY
	TAD NEGCR	/ LOAD -CR
	TAD TMP1	/ TMP == CR?
	SZA CLA		/ TRANSLATE CR
	 JMP GETNL	/ TO LF
	TAD TMP1	/ LOAD READ CHARACTER
	JMP I GETCHA
GETNL,	TAD NL		/ LOAD NEWLINE
	JMP I GETCHA	

XBREG,	BREG-1
CR,	15
NEGCR,	-15
NL,	12
NEGNL,	-12

PUTCHA,	0		/ PUT CHARACTER
	CLA
	TAD NEGNL	/ LOAD -NL
	TAD I PUTCHA	/ LOAD ARGUMENT
	SNA CLA		/ WANT TO PRINT NL?
	 JMP NOTNL	/ IF YES, PRINT CR FIRST
	TSF		/ WAIT FOR TELEPRINTER READY
	 JMP .-1
	TAD CR		/ LOAD CR
	TLS		/ PRINT CR
	CLA
NOTNL,	TSF		/ WAIT FOR TELEPRINTER READY
	 JMP .-1
	TAD I PUTCHA	/ LOAD CHARACTER TO PRINT
	TLS		/ PRINT CHARACTER
	ISZ PUTCHA	/ SKIP OVER ARGUMENT
	JMP I PUTCHA	/ RETURN

SENSE,	0		/ SENSE SWITCHES
	CLA OSR
	JMP I SENSE
