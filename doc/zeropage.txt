#zero page usage

0000--0007 interrupt handler
0010--0017 indexed memory locations
0020--0037 function parameters
0040--0047 runtime function pointers (arithmetic)
0050--0053 runtime function pointers (frame management)
      0056 return value
      0057 return address
0060--0177 scratch registers

#calling convention

Arguments are stored from left to right at 0020.
The return value is found in AC.
The return address is stored in the first word of
the procedure as JMS does.

#frame management

## the frame record
(nframe << 4 | narg)
return_address
arguments[narg]
template[nframe]

## the save area
pointer to frame record
saved_registers[nstack]

## utility routines
ECF (JMS I 0050)  establish call frame
(frame)

copy the caller's return address to 0057 and return_address
copy narg words from 0020 to arguments
copy nframe words from template to 0060

CAL (JMS I 0051)  high-level function call
(nregs)
(save-area)

Copy nregs registers from 0060 + nframe to the save area.

RCF (JMS I 0052) restore call frame

like ECF but take frame address from save area.  There must be
a single instruction between CAL and RCF.  Also restore the
registers saved by CAL.

#arithmetic

MUL (JMS I 0042)  multiply (unsigned)
(addr)

AC = *addr * AC
continue after addr


DIV (JMS I 0043)  divide (unsigned)
(addr)

AC = *addr / AC
continue after addr


MOD (JMS I 0044)  modulo (unsigned)
(addr)

AC = *addr % AC
continue after addr
