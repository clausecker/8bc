	/ B runtime

	/ label naming convention:
	/ X...  external symbols
	/ L...  compiler generated local symbols (... are digits)
	/ R...  B runtime symbols
	/ L...  B runtime local symbols (... are not all digits)

	*0040		/ arithmetic routines
SHL=	JMS I .
	RSHL		/ shift left
SHR=	JMS I .
	RSHR		/ shift right
MUL=	JMS I .
	RMUL		/ multiply
DIV=	JMS I .
	RDIV		/ divide
MOD=	JMS I .
	RMOD		/ modulo
IOR=	JMS I .
	RIOR		/ inclusive or
EOR=	JMS I .
	REOR		/ exclusive or

	*0050		/ frame management routines
ECF=	JMS I .
	RECF		/ establish call frame
RCF=	JMS I .
	RRCF		/ restore call frame
IAV=	JMS I .
	RIAV		/ initialize automatic variables
JSR=	JMS I .
	RJSR		/ jump subroutine, save, and restore
RET=	JMP I 0057	/ return from subroutine

	*0200
Rstart,	JMS Xmain
	CLA
	DCA 0077
	JMS I (Xexit)

Xmain,	HLT		/ dummy

RSHL,	0
	HLT

RSHR,	0
	HLT

RMUL,	0
	HLT

RDIV,	0
	HLT

RMOD,	0
	HLT

RIOR,	0
	HLT

REOR,	0
	HLT

RECF,	0
	TAD RECF	/ pointer to control word
	DCA 0010	/ 0010 iterates through lvalues
	TAD I RECF	/ control word
	AND (0077)	/ frame size
	SNA		/ empty frame?
	 JMP Ledlv	/ skip frame copying
	CIA		/ as a negative counter
	DCA 0056	/ stashed away
	TAD (0077)	/ beginning of scratch space
	DCA 0011	/ 0011 iterates through the scratch space

Ldlv,			/ deposit lvalues
	TAD I 0010	/ fetch lvalue
	DCA I 0011	/ deposit into scratch space
	ISZ 0056	/ done?
	 JMP Ldlv

Ledlv,			/ end of lvalue deposition
	TAD I RECF	/ control word
	RTR		/ fetch argument count
	RTR
	RTR
	AND (0077)	/ and mask it out
	SNA		/ no arguments?
	 JMP Lecfr	/ we are done here
	CIA		/ as a negative counter
	DCA 0056	/ stashed away
	TAD (0057)	/ argument lvalues
	DCA 0011	/ 0011 iterates through them
	TAD (0017)	/ argument
	DCA 0012	/ 0012 iterates through them

Ldalv,			/ deposit argument lvalues
	TAD 0010	/ argument rvalue address
	DCA 0057	/ remember it
	TAD I 0012	/ load argument
	DCA I 0057	/ stash it
	TAD 0057	/ argument rvalue address
	DCA I 0011	/ save to lvalues
	ISZ 0056	/ done?
	 JMP Ldalv

Lecfr,			/ establish call frame return
	STA RAL		/ AC = -2
	TAD RECF	/ points to return address of caller
	DCA 0057	/ remember it
	TAD I 0057	/ return address of caller
	DCA 0057	/ populate return address field in zero page
	JMP I 0010	/ return to caller

RRCF,	0
	HLT

RIAV,	0
	HLT

RJSR,	0
	HLT